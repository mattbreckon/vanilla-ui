{{#freestyle-section name="Naming Conventions" as |section|}}
  {{#section.subsection name="Overview"}}
    {{#freestyle-annotation}}
      <p>Vanilla UI mostly follows a BEM (block, element, modifier) pattern with atomic variations and helper classes.</p>

      <p>The naming convention allows developers to understand the relationship between elements and/or the purpose of a specific class from the class name alone.</p>
    {{/freestyle-annotation}}
  {{/section.subsection}}

  {{docs/naming-conventions-block}}
  {{docs/naming-conventions-element}}

  {{#section.subsection name="Modifier"}}
    {{#freestyle-note "naming-modifier--notes"}}
      `.class-name--modifier`

      #### Purpose
      A class that inherits and modifies the properties of a `block` class.

      #### When to Use
      You want to create a new `block` that is a variation of another `block` class.

      #### Example

      ```
      .ui-btn {
        display: inline-block;
        background-color: #3498db;
        // ...

        &--outline {
          @extend .ui-btn;
          background-color: initial;
          color: #2980b9;
        }
      }

      /* css */
      .ui-btn,
      .ui-btn--outline {
        display: inline-block;
        background-color: #3498db;
        // ...
      }

      .ui-btn--outline {
        background-color: initial;
        color: #2980b9;
      }
      ```
    {{/freestyle-note}}

    {{#freestyle-usage "naming-modifier" title="Modifier" usageTitle="usage"}}
      <button class="ui-btn--outline">Outline</button>
    {{/freestyle-usage}}
  {{/section.subsection}}

  {{#section.subsection name="Variation"}}
    {{#freestyle-note "naming-variation--notes"}}
      `.class-name-variation`

      #### Purpose
      A class that adds/modifies properties to other `block` and `modifier` classes.

      #### When to Use
      Variations are more generic than `modifier` classes. You should think of them like atomic classes or a mixin that relates to specific `block` and `modifier` classes.

      A good example of variation classes would be when you want to style variations in size or state.

      For example while it might make sense to have the classes `"ui-btn"` and `"ui-btn--success"` it would make much less sense to start creating classes like this `"ui-btn"`, `"ui-btn--success"`, `"ui-btn--small"`, `"ui-btn--success--small"`.

      Instead we can create atomic classes that are related to and modify the `block` or `modifier` class.

      #### Example

      ```
      .ui-btn-small {
        font-size: 10px;
      }

      .ui-btn-disabled {
        opacity: 0.5;
        cursor: not-allowed;
      }
      ```
    {{/freestyle-note}}

    {{#freestyle-usage "naming-variation" title="Variation" usageTitle="usage"}}
      <button class="ui-btn">Default Button</button>
      <button class="ui-btn ui-btn-small">Small Default Button</button>

      <button class="ui-btn--outline ui-btn-small">Small Outline Button</button>
      <button class="ui-btn--outline ui-btn-small ui-btn-disabled" disabled>Small Disabled Outline Button</button>
    {{/freestyle-usage}}
  {{/section.subsection}}

  {{#section.subsection name="Helper"}}
    {{#freestyle-note "naming-helper-class--notes"}}
      `.helper-name`

      #### Purpose
      Atomic helper classes that can be used to adds/modifies properties of another `block` or `modifier` class.

      #### When to Use
      Helpers are super generic variation classes. That can be used to add specific properties to any other class.

      A good example of helper-class classes would be when you want to style helper-classs in size or state.

      For example while it might make sense to have the classes `"ui-btn"` and `"ui-btn--success"` it would make much less sense to start creating classes like this `"ui-btn"`, `"ui-btn--success"`, `"ui-btn--small"`, `"ui-btn--success--small"`.

      Instead we can create atomic classes that are related to and modify the `block` or `modifier` class.

      #### Example

      ```
      .bold {
        text-transform: uppercase;
      }

      .invisible {
        visibility: hidden;
      }
      ```
    {{/freestyle-note}}

    {{#freestyle-usage "naming-helper-class" title="Helper" usageTitle="usage"}}
      <button class="ui-btn bold">Default Button</button>
      <button class="ui-btn invisible">Default Button</button>
    {{/freestyle-usage}}
  {{/section.subsection}}
{{/freestyle-section}}

<style>
  .ui-btn,
  .ui-btn--outline {
    display: inline-block;
    background-color: #3498db;
    padding: 10px 25px;
    border: 1px solid #2980b9;
    border-radius: 3px;
    user-select: none;

    font-size: 14px;
    text-align: center;
    text-transform: capitalize;
    cursor: pointer;
    color: #fff;
  }

  .ui-btn--outline {
    background-color: initial;
    color: #2980b9;
  }

  .ui-btn-small {
    font-size: 10px;
  }

  .ui-btn-disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .ui-btn__subtext {
    margin-top: 5px;
    font-size: 8px;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  p code {
    color: #9b59b6;
  }
</style>
